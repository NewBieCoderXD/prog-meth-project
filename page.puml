@startuml
interface org.example.prog_meth_project.page.RubikPage {
+ VBox getScene()
+ AtomicBoolean getHasStartedSolving()
+ NotationQueue getNotationQueue()
+ BaseRubik getRubik()
+ RubikFROOK getRubikSolver()
+ AtomicBoolean getIsSolving()
+ Group getWorld()
+ Pane getRoot()
+ Camera getCamera()
+ Xform getCameraXform()
+ Group getAxisGroup()
+ NotationStack getNotationStack()
+ double getStartDragX()
+ double getStartDragY()
+ void setStartDragX(double)
+ void setStartDragY(double)
+ SubScene getSubScene3DView()
+ void setScene(VBox)
+ void setSubScene3DView(SubScene)
~ Text buildAnglesText()
~ void setAnglesText(Text)
~ void build3DSubScene(double,double)
~ void createScene()
~ Button buildSolveButton()
~ GridPane buildMenus()
~ void buildMenu(GridPane)
~ Button notationButton(Notation)
~ void buildRubik()
~ void buildCamera()
~ void buildAxes()
}

class org.example.prog_meth_project.page.MirrorRubikPage {
- StackPane root
- Group world
- Group axisGroup
- PerspectiveCamera camera
- Xform cameraXform
- double startDragX
- double startDragY
- RubikFROOK rubikSolver
- AtomicBoolean hasStartedSolving
- AtomicBoolean isSolving
- BaseRubik rubik
- NotationStack notationStack
- NotationQueue notationQueue
- VBox scene
+ SubScene subScene3DView
+ <<Create>> MirrorRubikPage()
+ AtomicBoolean getIsSolving()
+ AtomicBoolean getHasStartedSolving()
+ NotationQueue getNotationQueue()
+ BaseRubik getRubik()
+ RubikFROOK getRubikSolver()
+ Group getWorld()
+ StackPane getRoot()
+ PerspectiveCamera getCamera()
+ Xform getCameraXform()
+ Group getAxisGroup()
+ NotationStack getNotationStack()
+ double getStartDragX()
+ double getStartDragY()
+ SubScene getSubScene3DView()
+ void setScene(VBox)
+ void setSubScene3DView(SubScene)
+ void setStartDragX(double)
+ void setStartDragY(double)
+ VBox getScene()
}


class org.example.prog_meth_project.page.StandardRubikPage {
- StackPane root
- Group world
- Group axisGroup
- PerspectiveCamera camera
- Xform cameraXform
- double startDragX
- double startDragY
- RubikFROOK rubikSolver
- AtomicBoolean hasStartedSolving
- AtomicBoolean isSolving
- BaseRubik rubik
- NotationStack notationStack
- NotationQueue notationQueue
- VBox scene
+ SubScene subScene3DView
+ <<Create>> StandardRubikPage()
+ NotationStack getNotationStack()
+ NotationQueue getNotationQueue()
+ double getStartDragX()
+ AtomicBoolean getIsSolving()
+ Group getWorld()
+ Group getAxisGroup()
+ RubikFROOK getRubikSolver()
+ Xform getCameraXform()
+ StackPane getRoot()
+ double getStartDragY()
+ AtomicBoolean getHasStartedSolving()
+ SubScene getSubScene3DView()
+ PerspectiveCamera getCamera()
+ BaseRubik getRubik()
+ void setScene(VBox)
+ void setStartDragY(double)
+ void setStartDragX(double)
+ void setSubScene3DView(SubScene)
+ VBox getScene()
}




org.example.prog_meth_project.page.RubikPage <|.. org.example.prog_meth_project.page.MirrorRubikPage
org.example.prog_meth_project.page.RubikPage <|.. org.example.prog_meth_project.page.StandardRubikPage
@enduml